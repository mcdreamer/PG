cmake_minimum_required(VERSION 3.0)
project(pg_app)

set(PG_CMAKE_DIR ${CMAKE_CURRENT_LIST_DIR})

function(pg_set_app_link_libs)

set(BASE_APP_LINK_LIBS PG pile snappy)

if (APPLE)

find_library(SFMLAUDIO sfml-audio)
if (NOT SFMLAUDIO)
    message(FATAL_ERROR "sfml-audio not found")
endif()

find_library(SFMLSYSTEM sfml-system)
if (NOT SFMLSYSTEM)
    message(FATAL_ERROR "sfml-system not found")
endif()

find_library(SFMLGRAPHICS sfml-graphics)
if (NOT SFMLGRAPHICS)
    message(FATAL_ERROR "sfml-graphics not found")
endif()

find_library(SFMLWINDOW sfml-window)
if (NOT SFMLWINDOW)
    message(FATAL_ERROR "sfml-window not found")
endif()

endif()

set(APP_LINK_LIBS ${BASE_APP_LINK_LIBS} ${SFMLAUDIO} ${SFMLSYSTEM} ${SFMLGRAPHICS} ${SFMLWINDOW} "-framework Foundation" "-framework Cocoa" objc PARENT_SCOPE)

endfunction()



function(build_pg_app SRCS RESOURCES_DIR RESOURCES_JSON APP_NAME APP_ID)

set(STOCKPILE_DIR "${PG_CMAKE_DIR}/../thirdparty/stockpile/stockpile")

set(SNAPPY_BUILD_TESTS OFF CACHE BOOL "")

add_subdirectory(${PG_CMAKE_DIR} "./PG")
add_subdirectory("${STOCKPILE_DIR}/tool" "./stockpiletool")

include("${STOCKPILE_DIR}/build/stockpile_cmake.txt")

set(CMAKE_BUILD_TYPE RELEASE)
set(CMAKE_CXX_FLAGS "-std=c++14")

include_directories(
  "../"
  "../PG/thirdparty/boost"
)

set(PILE_OUTPUT resources.pile)

build_pile(
  stockpiletool
  ${RESOURCES_DIR}/${RESOURCES_JSON}
  ${RESOURCES_DIR}
  ${PILE_OUTPUT}
)

set_source_files_properties(${PILE_OUTPUT} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)

add_executable(${APP_NAME} "${SRCS}" ${PILE_OUTPUT})

pg_set_app_link_libs()
target_link_libraries(${APP_NAME} ${APP_LINK_LIBS})

set_target_properties(${APP_NAME} PROPERTIES
  MACOSX_BUNDLE TRUE
  MACOSX_FRAMEWORK_IDENTIFIER ${APP_ID}
)

endfunction()